<?xml version="1.0" encoding="UTF-8"?>
<oval_definitions xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd      http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:ind-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5">
  <generator>
    <oval:schema_version>5.9</oval:schema_version>
    <oval:timestamp>2009-01-12T10:41:00-05:00</oval:timestamp>
    <terms_of_use>Copyright (c) 2002-2011, The MITRE Corporation. All rights reserved. The contents of this file are subject to the license described in terms.txt.</terms_of_use>
  </generator>
  <definitions>
    <definition id="oval:org.mitre.oval.test:def:230" version="1" class="miscellaneous">
      <metadata>
        <title>Evaluate to true if the int datatype is properly supported</title>
        <description>This definition is intended to evalutate to true if the interpreter properly supports the int datatype and all of its valid operations.</description>
      </metadata>
      <criteria operator="AND">
        <criteria operator="AND" comment="True if the equals operation is supported">
          <criterion comment="Test that the equals operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:1194"/>
          <criterion negate="true" comment="Test that the equals operation is supported with two unequal integer values." test_ref="oval:org.mitre.oval.test:tst:1251"/>
        </criteria>
        <criteria operator="AND" comment="True if the not equal operation is supported">
          <criterion negate="true" comment="Test that the not equal operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:997"/>
          <criterion comment="Test that the not equal operation is supported with two unequal integer values." test_ref="oval:org.mitre.oval.test:tst:1126"/>
        </criteria>
        <criteria operator="AND" comment="True if the greater than operation is supported">
          <criterion comment="Test that the greater than operation is supported with a greater than integer value." test_ref="oval:org.mitre.oval.test:tst:579"/>
          <criterion negate="true" comment="Test that the greater than operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:1077"/>
          <criterion negate="true" comment="Test that the greater than operation is supported with a less than integer value." test_ref="oval:org.mitre.oval.test:tst:286"/>
        </criteria>
        <criteria operator="AND" comment="True if the greater than or equal operation is supported">
          <criterion comment="Test that the greater than or equal operation is supported with a greater than integer value." test_ref="oval:org.mitre.oval.test:tst:1216"/>
          <criterion comment="Test that the greater than or equal operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:1128"/>
          <criterion negate="true" comment="Test that the greater than or equal operation is supported with a less than integer value." test_ref="oval:org.mitre.oval.test:tst:1225"/>
        </criteria>
        <criteria operator="AND" comment="True if the less than operation is supported">
          <criterion comment="Test that the less than operation is supported with a less than integer value." test_ref="oval:org.mitre.oval.test:tst:866"/>
          <criterion negate="true" comment="Test that the less than operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:888"/>
          <criterion negate="true" comment="Test that the less than operation is supported with a greater than integer value." test_ref="oval:org.mitre.oval.test:tst:1173"/>
        </criteria>
        <criteria operator="AND" comment="True if the less than or equal operation is supported">
          <criterion comment="Test that the less than or equal operation is supported with a less than integer value." test_ref="oval:org.mitre.oval.test:tst:1167"/>
          <criterion comment="Test that the less than or equal operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:1277"/>
          <criterion negate="true" comment="Test that the less than or equal operation is supported with a greater than integer value." test_ref="oval:org.mitre.oval.test:tst:1214"/>
        </criteria>
        <criteria operator="AND" comment="True if the bitwise and operation is supported">
          <criterion comment="Test that the bitwise and operation is supported with a single integer where the result is the same as the state mask." test_ref="oval:org.mitre.oval.test:tst:1267"/>
          <criterion negate="true" comment="Test that the bitwise and operation is supported with a single integer where the result is not the same as the state mask." test_ref="oval:org.mitre.oval.test:tst:1276"/>
        </criteria>
        <criteria operator="AND" comment="True if the bitwise or operation is supported">
          <criterion comment="Test that the bitwise or operation is supported with a single integer where the result is the same as the state mask." test_ref="oval:org.mitre.oval.test:tst:527"/>
          <criterion negate="true" comment="Test that the bitwise or operation is supported with a single integer where the result is not the same as the state mask." test_ref="oval:org.mitre.oval.test:tst:1213"/>
        </criteria>
      </criteria>
    </definition>
  </definitions>
  <tests>
    <variable_test id="oval:org.mitre.oval.test:tst:1194" version="1" comment="Test that the equals operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:180"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1049"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1251" version="1" comment="Test that the equals operation is supported with two unequal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:390"/>
      <state state_ref="oval:org.mitre.oval.test:ste:513"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:997" version="1" comment="Test that the not equal operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:180"/>
      <state state_ref="oval:org.mitre.oval.test:ste:948"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1126" version="1" comment="Test that the not equal operation is supported with two unequal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:390"/>
      <state state_ref="oval:org.mitre.oval.test:ste:899"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:579" version="1" comment="Test that the greater than operation is supported with a greater than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:171"/>
      <state state_ref="oval:org.mitre.oval.test:ste:860"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1077" version="1" comment="Test that the greater than operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:180"/>
      <state state_ref="oval:org.mitre.oval.test:ste:268"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:286" version="1" comment="Test that the greater than operation is supported with a less than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:390"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1098"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1216" version="1" comment="Test that the greater than or equal operation is supported with a greater than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:171"/>
      <state state_ref="oval:org.mitre.oval.test:ste:146"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1128" version="1" comment="Test that the greater than or equal operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:180"/>
      <state state_ref="oval:org.mitre.oval.test:ste:406"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1225" version="1" comment="Test that the greater than or equal operation is supported with a less than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:390"/>
      <state state_ref="oval:org.mitre.oval.test:ste:159"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:866" version="1" comment="Test that the less than operation is supported with a less than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:390"/>
      <state state_ref="oval:org.mitre.oval.test:ste:801"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:888" version="1" comment="Test that the less than operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:180"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1086"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1173" version="1" comment="Test that the less than operation is supported with a greater than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:171"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1127"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1167" version="1" comment="Test that the less than or equal operation is supported with a less than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:390"/>
      <state state_ref="oval:org.mitre.oval.test:ste:416"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1277" version="1" comment="Test that the less than or equal operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:180"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1070"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1214" version="1" comment="Test that the less than or equal operation is supported with a greater than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:171"/>
      <state state_ref="oval:org.mitre.oval.test:ste:331"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1267" version="1" comment="Test that the bitwise and operation is supported with a single integer where the result is the same as the state mask." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:489"/>
      <state state_ref="oval:org.mitre.oval.test:ste:918"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1276" version="1" comment="Test that the bitwise and operation is supported with a single integer where the result is not the same as the state mask." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:161"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1010"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:527" version="1" comment="Test that the bitwise or operation is supported with a single integer where the result is the same as the state mask." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:489"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1037"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1213" version="1" comment="Test that the bitwise or operation is supported with a single integer where the result is not the same as the state mask." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:161"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1085"/>
    </variable_test>
  </tests>
  <objects>
    <variable_object id="oval:org.mitre.oval.test:obj:180" version="1" comment="This variable_object references the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:290</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:390" version="1" comment="This variable_object references the integer value '942'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:571</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:171" version="1" comment="This variable_object references the integer value '5890'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:830</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:489" version="1" comment="This variable_object references the integer value '6'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:2</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:161" version="1" comment="This variable_object references the integer value '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:133</var_ref>
    </variable_object>
  </objects>
  <states>
    <variable_state id="oval:org.mitre.oval.test:ste:1049" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:513" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:948" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="not equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:899" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="not equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:860" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:268" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1098" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:146" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:406" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:159" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:801" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1086" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1127" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:416" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1070" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:331" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:918" version="1" comment="This variable_state represents the integer value '4'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="bitwise and">4</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1010" version="1" comment="This variable_state represents the integer value '4'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="bitwise and">4</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1037" version="1" comment="This variable_state represents the integer value '14'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="bitwise or">14</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1085" version="1" comment="This variable_state represents the integer value '14'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="bitwise or">14</value>
    </variable_state>
  </states>
  <variables>
    <constant_variable id="oval:org.mitre.oval.test:var:290" version="1" comment="This constant_variable represents the integer value '1234'." datatype="int">
      <value>1234</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:571" version="1" comment="This constant_variable represents the integer value '942'." datatype="int">
      <value>942</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:830" version="1" comment="This constant_variable represents the integer value '5890'." datatype="int">
      <value>5890</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:2" version="1" comment="This constant_variable represents the integer value '6'." datatype="int">
      <value>6</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:133" version="1" comment="This constant_variable represents the integer value '1'." datatype="int">
      <value>1</value>
    </constant_variable>
  </variables>
</oval_definitions>