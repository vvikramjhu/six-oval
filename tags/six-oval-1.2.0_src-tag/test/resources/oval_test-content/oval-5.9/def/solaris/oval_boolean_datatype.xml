<?xml version="1.0" encoding="UTF-8"?>
<oval_definitions xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd      http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:ind-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5">
  <generator>
    <oval:schema_version>5.9</oval:schema_version>
    <oval:timestamp>2009-01-12T10:41:00-05:00</oval:timestamp>
    <terms_of_use>Copyright (c) 2002-2012, The MITRE Corporation. All rights reserved. The contents of this file are subject to the license described in terms.txt.</terms_of_use>
  </generator>
  <definitions>
    <definition id="oval:org.mitre.oval.test:def:333" version="1" class="miscellaneous">
      <metadata>
        <title>Evaluate to true if the boolean datatype is properly supported</title>
        <description>This definition is intended to evalutate to true if the interpreter properly supports the boolean datatype and all of its valid operations.</description>
      </metadata>
      <criteria operator="AND">
        <criteria operator="AND" comment="True if the equals operation is supported.">
          <criterion comment="Test that the 'equals' operation is supported with two equal boolean values." test_ref="oval:org.mitre.oval.test:tst:1365"/>
          <criterion negate="true" comment="Tests that the 'equals' operation is supported with two unequal boolean values." test_ref="oval:org.mitre.oval.test:tst:1688"/>
          <criterion comment="Test that the 'equals' operation is supported with two equal boolean values that use different formats." test_ref="oval:org.mitre.oval.test:tst:1448"/>
          <criterion negate="true" comment="Test that the 'equals' operation is supported with two unequal boolean values that use different formats." test_ref="oval:org.mitre.oval.test:tst:1622"/>
        </criteria>
        <criteria operator="AND" comment="True if the not equal operation is supported.">
          <criterion negate="true" comment="Test that the 'not equal' operation is supported with two equal boolean values." test_ref="oval:org.mitre.oval.test:tst:1386"/>
          <criterion comment="Test that the 'not equal' operation is supported with two unequal boolean values." test_ref="oval:org.mitre.oval.test:tst:1556"/>
          <criterion negate="true" comment="Test that the 'not equal' operation is supported with two equal boolean values that use different formats." test_ref="oval:org.mitre.oval.test:tst:738"/>
          <criterion comment="Test that the 'not equal' operation is supported with two unequal boolean values that use different formats." test_ref="oval:org.mitre.oval.test:tst:1358"/>
        </criteria>
      </criteria>
    </definition>
  </definitions>
  <tests>
    <variable_test id="oval:org.mitre.oval.test:tst:1365" version="1" comment="Test that the 'equals' operation is supported with two equal boolean values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:309"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1310"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1688" version="1" comment="Tests that the 'equals' operation is supported with two unequal boolean values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:1291"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1306"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1448" version="1" comment="Test that the 'equals' operation is supported with two equal boolean values that use different formats." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:319"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1485"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1622" version="1" comment="Test that the 'equals' operation is supported with two unequal boolean values that use different formats." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:1232"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1514"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1386" version="1" comment="Test that the 'not equal' operation is supported with two equal boolean values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:309"/>
      <state state_ref="oval:org.mitre.oval.test:ste:549"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1556" version="1" comment="Test that the 'not equal' operation is supported with two unequal boolean values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:1291"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1192"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:738" version="1" comment="Test that the 'not equal' operation is supported with two equal boolean values that use different formats." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:319"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1205"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1358" version="1" comment="Test that the 'not equal' operation is supported with two unequal boolean values that use different formats." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:1232"/>
      <state state_ref="oval:org.mitre.oval.test:ste:1520"/>
    </variable_test>
  </tests>
  <objects>
    <variable_object id="oval:org.mitre.oval.test:obj:309" version="1" comment="This variable_object represents the boolean value 'true'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:98</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:1291" version="1" comment="This variable_object represents the boolean value 'false'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:106</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:319" version="1" comment="This variable_object represents the boolean value '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:713</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:1232" version="1" comment="This variable_object represents the boolean value '0'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:547</var_ref>
    </variable_object>
  </objects>
  <states>
    <variable_state id="oval:org.mitre.oval.test:ste:1310" version="1" comment="This variable_state represents a boolean value that is equal to 'true' or '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="boolean">true</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1306" version="1" comment="This variable_state represents a boolean value that is equal to 'true' or '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="boolean">true</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1485" version="1" comment="This variable_state represents a boolean value that is equal to 'true' or '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="boolean">true</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1514" version="1" comment="This variable_state represents a boolean value that is equal to 'true' or '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="boolean">true</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:549" version="1" comment="This variable_state represents a boolean value that is not equal to 'true' or '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="boolean" operation="not equal">true</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1192" version="1" comment="This variable_state represents a boolean value that is not equal to 'true' or '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="boolean" operation="not equal">true</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1205" version="1" comment="This variable_state represents a boolean value that is not equal to 'true' or '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="boolean" operation="not equal">true</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:1520" version="1" comment="This variable_state represents a boolean value that is not equal to 'true' or '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="boolean" operation="not equal">true</value>
    </variable_state>
  </states>
  <variables>
    <constant_variable id="oval:org.mitre.oval.test:var:98" version="1" comment="This variable represents the boolean value 'true'." datatype="boolean">
      <value>true</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:106" version="1" comment="This variable represents the boolean value 'false'." datatype="boolean">
      <value>false</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:713" version="1" comment="This variable represents the boolean value '1'." datatype="boolean">
      <value>1</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:547" version="1" comment="This variable represents the boolean value '0'." datatype="boolean">
      <value>0</value>
    </constant_variable>
  </variables>
</oval_definitions>